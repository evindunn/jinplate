on:
  push:
    branches: [ main ]
    paths: [ jinplate/__version__.py ]
jobs:
  tag_release:
    name: tag release
    runs-on: ubuntu-latest
    outputs:
      tag: "v${{ steps.get_version.outputs.VERSION }}"
    steps:
      - uses: actions/checkout@v4

      - id: get_version
        run: echo VERSION=$(grep -Po '(?<=__VERSION__ = ")(\d+\.){2}\d+' jinplate/__version__.py) >> $GITHUB_OUTPUT

      - uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.get_version.outputs.VERSION }}',
              sha: context.sha
            })

  build:
    name: build package
    runs-on: ubuntu-latest
    needs: [tag_release]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ needs.tag_release.outputs.tag }}'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pypa/build
        run: python3 -m pip install build --user

      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7

  publish:
    name: publish package
    runs-on: ubuntu-latest
    needs: [build]

    environment:
      name: pypi
      url: https://pypi.org/p/jinplate

    permissions:
      id-token: write

    steps:
      - name: download built packages
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: publish
        uses: pypa/gh-action-pypi-publish@release/v1
